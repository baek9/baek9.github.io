<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Containerd 심층 분석 on code(evening);</title>
    <link>https://baek9.github.io/en/series/containerd-%EC%8B%AC%EC%B8%B5-%EB%B6%84%EC%84%9D/</link>
    <description>Recent content in Containerd 심층 분석 on code(evening);</description>
    <image>
      <url>https://baek9.github.io/logo.png</url>
      <link>https://baek9.github.io/logo.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Jun 2022 22:00:00 +0000</lastBuildDate><atom:link href="https://baek9.github.io/en/series/containerd-%EC%8B%AC%EC%B8%B5-%EB%B6%84%EC%84%9D/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gRPC를 이용한 Containerd의 통신 과정</title>
      <link>https://baek9.github.io/en/2022/06/grpc%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-containerd%EC%9D%98-%ED%86%B5%EC%8B%A0-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Tue, 14 Jun 2022 22:00:00 +0000</pubDate>
      
      <guid>https://baek9.github.io/en/2022/06/grpc%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-containerd%EC%9D%98-%ED%86%B5%EC%8B%A0-%EA%B3%BC%EC%A0%95/</guid>
      <description>Creating a container using Containerd ¶ The code below is an example of creating a container using Containerd. First, connect to Containerd using the UNIX domain socket containerd.sock. Containerd is a daemon process that always runs in the background. After that, through the Client object, Containerd gets the latest Debian Linux image and creates a Debian container. Very intuitive and simple, isn&amp;rsquo;t it? What you can see here is that it communicates with the process through the Client object.</description>
    </item>
    
  </channel>
</rss>
